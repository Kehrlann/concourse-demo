#------------------------------------------------------------------------------
#
# Global config :
# These are just yaml labels that can be reused elsewhere in the file, to allow
# reuse of common values. They are not concourse specific.
#
#------------------------------------------------------------------------------
config:
- &git-config
  uri: git@172.19.0.1:~/concourse-demo.git
  private_key: {{ssh-key}}
  branch: master


#------------------------------------------------------------------------------
#
# Concourse resources :
# Here are the inputs and outputs of all jobs defined in this pipeline.
#
#------------------------------------------------------------------------------
resources:
- name: backend-image-repo
  type: git
  source:
    <<: *git-config
    paths:
    - demo/backend/pom.xml
    - demo/ci/dockerfiles/backend-dockerfile

- name: frontend-image-repo
  type: git
  source:
    <<: *git-config
    paths:
    - demo/frontend/package.json
    - demo/frontend/yarn.lock
    - demo/ci/dockerfiles/frontend-dockerfile

- name: backend-image
  type: docker-image
  source:
    insecure_registries: ["registry:5000"]
    repository: "registry:5000/backend-image"

- name: frontend-image
  type: docker-image
  source:
    insecure_registries: ["registry:5000"]
    repository: "registry:5000/frontend-image"

- name: backend-repo
  type: git
  source:
    <<: *git-config
    paths:
    - demo/backend
    - demo/ci/tasks/test-and-build-backend.yml
    - demo/ci/scripts/test-and-build-backend.sh

- name: frontend-repo
  type: git
  source:
    <<: *git-config
    paths: [demo/frontend]


#------------------------------------------------------------------------------
#
# Jobs :
# All the jobs that constitue the pipeline.
#
#------------------------------------------------------------------------------
jobs:
- name: build-backend-image
  plan:
  - get: repo
    resource: backend-image-repo
    trigger: true
  - put: backend-image
    params:
      build: repo
      dockerfile: repo/demo/ci/dockerfiles/backend-dockerfile

- name: build-frontend-image
  plan:
  - get: repo
    resource: frontend-image-repo
    trigger: true
  - put: frontend-image
    params:
      build: repo
      dockerfile: repo/demo/ci/dockerfiles/frontend-dockerfile

- name: backend
  plan:
  - get: repo
    resource: backend-repo
    trigger: true
  - get: backend-image
    passed:
    - build-backend-image
    params:
      skip_download: false
  - task: build
    image: backend-image
    file: repo/demo/ci/tasks/test-and-build-backend.yml

- name: frontend
  plan:
  - get: repo
    resource: frontend-repo
    trigger: true
  - get: frontend-image
    params:
      skip_download: false
    passed:
    - build-frontend-image
  - task: test
    image: frontend-image
    config:
      platform: linux
      inputs:
      - name: repo
      run:
        path: /bin/bash
        args:
          - "-c"
          - |
            cd repo/demo/frontend && \
            mv /tmp/node_modules . && \
            CI=true yarn test
