#------------------------------------------------------------------------------
#
# Global config :
# These are just yaml labels that can be reused elsewhere in the file, to allow
# reuse of common values. They are not concourse specific.
#
#------------------------------------------------------------------------------
config:
- &git-config
  uri: git@git.host.daniel:~/concourse-demo.git
  private_key: ((id-rsa-git))
  branch: master

- &cf-config
  api: ((cf.api))
  username: ((cf.username))
  password: ((cf.password))
  organization: pcfdev-org
  skip_cert_check: true

- &s3-config
  access_key_id: ((minio.id))
  secret_access_key: ((minio.secret))
  endpoint: ((minio.api))
  skip_ssl_verification: true


#------------------------------------------------------------------------------
#
# Concourse resources :
# Here are the inputs and outputs of all jobs defined in this pipeline.
#
#------------------------------------------------------------------------------
resources:

# First, the git repos
- name: backend-image-repo
  type: git
  source:
    <<: *git-config
    paths:
    - demo/backend/pom.xml
    - demo/ci/dockerfiles/backend-dockerfile

- name: frontend-image-repo
  type: git
  source:
    <<: *git-config
    paths:
    - demo/frontend/package.json
    - demo/frontend/yarn.lock
    - demo/ci/dockerfiles/frontend-dockerfile

- name: e2e-image-repo
  type: git
  source:
    <<: *git-config
    paths:
    - demo/ci/dockerfiles/e2e-dockerfile

- name: backend-repo
  type: git
  source:
    <<: *git-config
    paths:
    - demo/backend
    - demo/ci/tasks/test-and-build-backend.yml
    - demo/ci/scripts/test-and-build-backend.sh
    - demo/ci/manifests/backend.yml

- name: frontend-repo
  type: git
  source:
    <<: *git-config
    paths:
    - demo/frontend
    - demo/ci/tasks/test-and-build-frontend.yml
    - demo/ci/scripts/test-and-build-frontend.sh
    - demo/ci/manifests/frontend.yml

- name: e2e-repo
  type: git
  source:
    <<: *git-config
    paths:
    - demo/frontend/e2e
    - demo/ci/tasks/run-e2e.yml
    - demo/ci/scripts/run-e2e.sh

- name: release-repo
  type: git
  source:
    <<: *git-config
    paths:
    - demo/ci/manifests
    - demo/ci/tasks/package-release.yml
    - demo/ci/scripts/package-release.sh

# Cloud foundry endpoints
- name: cf-dev
  type: cf
  source:
    <<: *cf-config
    space: ci

- name: cf-prod
  type: cf
  source:
    <<: *cf-config
    space: prod

# Minio (s3 compatible file storage)
- name: backend-bucket
  type: s3
  source:
    <<: *s3-config
    bucket: todo-backend
    regexp: backend-(.*).jar

- name: frontend-bucket
  type: s3
  source:
    <<: *s3-config
    bucket: todo-frontend
    regexp: frontend-(.*).tgz

- name: release-bucket
  type: s3
  source:
    <<: *s3-config
    bucket: todo-app
    regexp: todo-(.*).tgz

# Semantic versioning resources, to bump version numbers automatically
- name: release-version
  type: semver
  source:
    driver: s3
    <<: *s3-config
    bucket: todo-version
    key: version
    initial_version: "1.0.0"

# Last, the docker images in which to run jobs
- name: backend-image
  type: docker-image
  source:
    insecure_registries: ["registry:5000"]
    repository: "registry:5000/backend-image"

- name: frontend-image
  type: docker-image
  source:
    insecure_registries: ["registry:5000"]
    repository: "registry:5000/frontend-image"

- name: e2e-image
  type: docker-image
  source:
    insecure_registries: ["registry:5000"]
    repository: "registry:5000/e2e-image"


#------------------------------------------------------------------------------
#
# Jobs :
# All the jobs that constitue the pipeline.
#
#------------------------------------------------------------------------------
jobs:
- name: build-backend-image
  plan:
  - get: repo
    resource: backend-image-repo
  - put: backend-image
    params:
      build: repo
      dockerfile: repo/demo/ci/dockerfiles/backend-dockerfile

- name: build-frontend-image
  plan:
  - get: repo
    resource: frontend-image-repo
  - put: frontend-image
    params:
      build: repo
      dockerfile: repo/demo/ci/dockerfiles/frontend-dockerfile

- name: build-e2e-image
  plan:
  - get: repo
    resource: e2e-image-repo
  - put: e2e-image
    params:
      build: repo
      dockerfile: repo/demo/ci/dockerfiles/e2e-dockerfile

- name: backend
  plan:
  - get: repo
    resource: backend-repo
    trigger: true
  - task: build
    file: repo/demo/ci/tasks/test-and-build-backend.yml
  - put: cf-dev
    params:
      manifest: repo/demo/ci/manifests/backend.yml
      path: build/backend-*.jar
  - put: backend-bucket
    params:
      file: build/backend-*.jar

- name: frontend
  plan:
  - get: repo
    resource: frontend-repo
    trigger: true
  - task: test
    file: repo/demo/ci/tasks/test-and-build-frontend.yml
  - put: cf-dev
    params:
      manifest: repo/demo/ci/manifests/frontend.yml
      path: build/dist
  - put: frontend-bucket
    params:
      file: build/frontend-*.tgz

- name: e2e
  plan:
  - get: repo
    resource: e2e-repo
    trigger: true
  - get: frontend-bucket
    passed: [frontend]
    trigger: true
  - get: backend-bucket
    passed: [backend]
    trigger: true
  - task: test
    file: repo/demo/ci/tasks/run-e2e.yml


- name: release
  plan:
  - aggregate:
    - get: frontend-bucket
      passed: [e2e]
      trigger: true
      params:
        unpack: true
    - get: backend-bucket
      passed: [e2e]
      trigger: true
    - get: release-version
    - get: repo
      resource: release-repo
      trigger: true
  - task: repackage
    file: repo/demo/ci/tasks/package-release.yml
  - put: cf-prod
    params:
      manifest: prod/manifest.yml
      path: prod
  - put: release-bucket
    params:
      file: release/release-*.tgz
  - put: release-version
    params:
      bump: patch


#------------------------------------------------------------------------------
#
# Groups :
# Display only certain jobs on a given page
#
#------------------------------------------------------------------------------
groups:
- name: main
  jobs:
  - backend
  - frontend
  - e2e
  - release
- name: images
  jobs:
  - build-e2e-image
  - build-backend-image
  - build-frontend-image
